stages:
#  - review_webpack
#  - review_docker
#  - review_deploy
#  - test
  - build
#  - sentry
  - deploy
  - publish

#review:webpack:
#  stage: review_webpack
#  image:
#    name: nikolaik/python-nodejs:python3.7-nodejs10-alpine
#  variables:
#    NODE_ENV: "development"
#  script:
#    - apk add --no-cache git gcc libffi-dev python3-dev musl-dev openssl-dev
#    - npm install
#    - npm run build
#  only:
#    - merge_requests@SiCKRAGE/sickrage
#  cache:
#    key: ${CI_COMMIT_REF_SLUG}
#    paths:
#      - sickrage/core/webserver/static/
#
#review:docker:
#  stage: review_docker
#  dependencies:
#    - review:webpack
#  image:
#    name: docker:latest
#    entrypoint: ["/bin/sh", "-c"]
#  variables:
#    DOCKER_DRIVER: overlay2
#    DOCKER_HOST: tcp://localhost:2375
#    DOCKER_TLS_CERTDIR: ""
#  services:
#    - docker:dind
#  script:
#    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_JOB_TOKEN}" "${CI_REGISTRY}"
#    - docker build --network host -t "${CI_REGISTRY_IMAGE}:latest" .
#    - docker tag "${CI_REGISTRY_IMAGE}:latest" "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}"
#    - test ! -z "${CI_COMMIT_TAG}" && docker push "${CI_REGISTRY_IMAGE}:latest"
#    - docker push "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}"
#  only:
#    - merge_requests@SiCKRAGE/sickrage
#  cache:
#    key: ${CI_COMMIT_REF_SLUG}
#
#review:deploy:
#  stage: review_deploy
#  dependencies:
#    - review:docker
#  image:
#    name: lachlanevenson/k8s-kubectl:latest
#    entrypoint: ["/bin/sh", "-c"]
#  script:
#    - kubectl create secret docker-registry gitlab-registry --namespace ${KUBE_NAMESPACE} --docker-server=${CI_REGISTRY} --docker-username=${CI_REGISTRY_USER} --docker-password=${CI_JOB_TOKEN} --docker-email=$GITLAB_USER_EMAIL --dry-run -o json | kubectl apply --namespace ${KUBE_NAMESPACE} -f -
#    - sed -i "s~__CI_REGISTRY_IMAGE__~${CI_REGISTRY_IMAGE}~" manifests/deployment.yaml
#    - sed -i "s/__VERSION__/${CI_COMMIT_REF_NAME}/" manifests/deployment.yaml manifests/ingress.yaml manifests/service.yaml
#    - sed -i "s/__CI_COMMIT_REF_SLUG__/${CI_COMMIT_REF_SLUG}/" manifests/deployment.yaml manifests/ingress.yaml manifests/service.yaml
#    - sed -i "s/__CI_ENVIRONMENT_SLUG__/${CI_ENVIRONMENT_SLUG}/" manifests/deployment.yaml manifests/ingress.yaml manifests/service.yaml
#    - sed -i "s/__KUBE_NAMESPACE__/${KUBE_NAMESPACE}/" manifests/deployment.yaml manifests/ingress.yaml manifests/service.yaml
#    - |
#      if kubectl apply -f manifests/deployment.yaml | grep -q unchanged; then
#          echo "=> Patching deployment to force image update."
#          kubectl patch -f manifests/deployment.yaml -p "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"ci-last-updated\":\"$(date +'%s')\"}}}}}"
#      else
#          echo "=> Deployment apply has changed the object, no need to force image update."
#      fi
#    - kubectl apply -f manifests/service.yaml || true
#    - kubectl apply -f manifests/ingress.yaml
#    - kubectl rollout status -f manifests/deployment.yaml
#  environment:
#    name: review/$CI_COMMIT_REF_NAME
#    url: https://review.sickrage.ca/$CI_COMMIT_REF_SLUG
#    on_stop: review:stop
#  only:
#    - merge_requests@SiCKRAGE/sickrage
#
#review:stop:
#  stage: review_deploy
#  image:
#    name: lachlanevenson/k8s-kubectl:latest
#    entrypoint: ["/bin/sh", "-c"]
#  script:
##    - wget -O /usr/bin/reg https://github.com/genuinetools/reg/releases/download/v0.13.0/reg-linux-amd64
##    - chmod +x /usr/bin/reg
##    - reg -r ${CI_REGISTRY} -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} rm ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}
#    - kubectl delete ing -l ref=${CI_ENVIRONMENT_SLUG}
#    - kubectl delete all -l ref=${CI_ENVIRONMENT_SLUG}
#  variables:
#    GIT_STRATEGY: none
#  when: manual
#  environment:
#    name: review/$CI_COMMIT_REF_NAME
#    action: stop
#  only:
#    - merge_requests@SiCKRAGE/sickrage

#.test_template: &test
#  stage: test
#  retry: 1
#  image:
#    name: python:$PYTHON_VERSION
#  variables:
#    ASYNC_TEST_TIMEOUT: 60
#  script:
#    - pip install tox
#    - tox -e $TOX_ENV
#  artifacts:
#    when: always
#    reports:
#      junit: report.xml
#    paths:
#      - report.xml
#    expire_in: 1 week
#  except:
#    refs:
#      - tags
#      - triggers
#    variables:
#      - $CI_COMMIT_BRANCH == "master"
#      - $CI_COMMIT_BRANCH == "i10n_develop"
#      - $CI_COMMIT_MESSAGE =~ /\[TASK\] Pre-Releasing/
#      - $CI_COMMIT_MESSAGE =~ /\[TASK\] Bump/
#
#test_py36:
#  <<: *test
#  variables:
#    TOX_ENV: "py36"
#    PYTHON_VERSION: "3.6"
#
#test_py37:
#  <<: *test
#  variables:
#    TOX_ENV: "py37"
#    PYTHON_VERSION: "3.7"
#
#test_py38:
#  <<: *test
#  variables:
#    TOX_ENV: "py38"
#    PYTHON_VERSION: "3.8"
#
#test_py39:
#  <<: *test
#  variables:
#    TOX_ENV: "py39"
#    PYTHON_VERSION: "3.9"
#
#test_py310:
#  <<: *test
#  variables:
#    TOX_ENV: "py310"
#    PYTHON_VERSION: "3.10"

build_master:
  stage: build
  image:
    name: nikolaik/python-nodejs:python3.10-nodejs14-alpine
  variables:
    NODE_ENV: "development"
    CARGO_HOME: "$CI_PROJECT_DIR/cargo"
  script:
    - export PATH="$CARGO_HOME/bin:$PATH"
    - apk add --no-cache git gcc libffi-dev python3-dev musl-dev openssl-dev curl unzip
    - curl https://sh.rustup.rs -sSf | sh -s -- -y
    - git config --global user.email $(git --no-pager show -s --format='%ae' HEAD)
    - git config --global user.name $(git --no-pager show -s --format='%an' HEAD)
    - pip install -U pip
    - pip install bumpversion
    - pip install -r requirements-dev.txt
    - bumpversion --allow-dirty release package.json sickrage/version.txt sickrage/__init__.py
    - RELEASE_VERSION=$(awk -F '"' '/^__version__/ {print $2}' sickrage/__init__.py)
    - npx auto-changelog -v $RELEASE_VERSION --hide-credit --package --commit-limit false --ignore-commit-pattern \[TASK\].*
    - npm install
    - npm run build
    - python checksum-generator.py
    - git checkout -b release/$RELEASE_VERSION
    - git fetch --all
    - git add --all
    - git commit -m "[TASK] Releasing v$RELEASE_VERSION"
    - git checkout master
    - git fetch --all
    - git merge release/$RELEASE_VERSION
    - git tag -a $RELEASE_VERSION -m "Release v$RELEASE_VERSION master"
    - git push https://$GITLAB_CI_USER:$GITLAB_CI_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git HEAD:master --follow-tags
    - git checkout develop
    - git merge --ff-only release/$RELEASE_VERSION
    - bumpversion --allow-dirty patch package.json sickrage/version.txt sickrage/__init__.py
    - RELEASE_VERSION=$(awk -F '"' '/^__version__/ {print $2}' sickrage/__init__.py)
    - python checksum-generator.py
    - git add --all
    - git commit -m "[TASK] Bump develop branch to v$RELEASE_VERSION"
    - git push https://$GITLAB_CI_USER:$GITLAB_CI_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git HEAD:develop --follow-tags
  when: manual
  only:
    - /^[0-9.]+dev[0-9]+$/@SiCKRAGE/sickrage
  except:
    refs:
      - branches
      - triggers
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[TASK\] Releasing/

build_develop:
  stage: build
  retry: 2
  image:
    name: nikolaik/python-nodejs:python3.10-nodejs14-alpine
  variables:
    NODE_ENV: "development"
    CARGO_HOME: "$CI_PROJECT_DIR/cargo"
  script:
    - export PATH="$CARGO_HOME/bin:$PATH"
    - apk add --no-cache git gcc libffi-dev python3-dev musl-dev openssl-dev curl
    - curl https://sh.rustup.rs -sSf | sh -s -- -y
    - npm install
    - pip install -U pip
    - pip install bumpversion
    - pip install -r requirements-dev.txt
    - bumpversion --allow-dirty dev package.json sickrage/version.txt sickrage/__init__.py
    - RELEASE_VERSION=$(awk -F '"' '/^__version__/ {print $2}' sickrage/__init__.py)
    - npx auto-changelog -v $RELEASE_VERSION --hide-credit --unreleased --package --commit-limit false --ignore-commit-pattern \[TASK\].*
    - npm run build
    - python checksum-generator.py
    - python setup.py extract_messages
    - python setup.py init_catalog -l en_US
    - python setup.py compile_catalog
    - git config --global user.email $(git --no-pager show -s --format='%ae' HEAD)
    - git config --global user.name $(git --no-pager show -s --format='%an' HEAD)
    - git add --all
    - git commit -m "[TASK] Pre-Releasing v$RELEASE_VERSION"
    - git tag -a $RELEASE_VERSION -m "Pre-release v$RELEASE_VERSION"
    - git push https://$GITLAB_CI_USER:$GITLAB_CI_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git HEAD:$CI_COMMIT_REF_NAME --follow-tags
  only:
    - develop@SiCKRAGE/sickrage
  except:
    refs:
      - tags
      - triggers
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[TASK\] Pre-Releasing/
      - $CI_COMMIT_MESSAGE =~ /\[TASK\] Bump/

#sentry:
#  stage: sentry
#  retry: 2
#  image:
#    name: getsentry/sentry-cli
#    entrypoint: [ "" ]
#  script:
#    - apk add --no-cache git
#    - export SENTRY_URL=$SENTRY_URL
#    - export SENTRY_AUTH_TOKEN=$SENTRY_AUTH_TOKEN
#    - export SENTRY_ORG=$SENTRY_ORG
#    - export SENTRY_PROJECT=$SENTRY_PROJECT
#    - RELEASE_VERSION=$(awk -F '"' '/^__version__/ {print $2}' sickrage/__init__.py)
#    - RELEASE_BRANCH=$(git branch -a --contains tags/$CI_COMMIT_REF_NAME | grep origin | sed 's/.*origin\///')
#    - sentry-cli releases new --project $SENTRY_PROJECT $RELEASE_VERSION
#    - sentry-cli releases set-commits --auto $RELEASE_VERSION
#    - sentry-cli releases finalize $RELEASE_VERSION
##    - sentry-cli releases deploys $RELEASE_VERSION new -e $RELEASE_BRANCH
#  only:
#    - /^[0-9.]+$/@SiCKRAGE/sickrage
#    - /^[0-9.]+dev[0-9]+$/@SiCKRAGE/sickrage
#  except:
#    - branches
#    - triggers

publish:
  stage: publish
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - release-cli create --name "Release $CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG
  only:
    - tags

pypi:
  stage: deploy
  retry: 2
  image: python:3.8-alpine3.12
  variables:
    CARGO_HOME: "$CI_PROJECT_DIR/cargo"
  script:
    - export PATH="$CARGO_HOME/bin:$PATH"
    - apk add --no-cache py-pip gcc libffi-dev python3-dev musl-dev openssl-dev curl
    - curl https://sh.rustup.rs -sSf | sh -s -- -y
    - pip install -U pip
    - pip install -U twine
    - sed -i "s/^__install_type__ = [\"']\(.*\)[\"']/__install_type__ = \"pip\"/" sickrage/__init__.py
    - python setup.py sdist bdist_wheel
    - twine upload dist/*
  only:
    - /^[0-9.]+$/@SiCKRAGE/sickrage
    - /^[0-9.]+dev[0-9]+$/@SiCKRAGE/sickrage
  except:
    - branches
    - triggers

docker_master:
  stage: deploy
  trigger:
    project: sickrage/sickrage-docker
    branch: master
    strategy: depend
  only:
    - /^[0-9.]+$/@SiCKRAGE/sickrage
  except:
    - branches
    - triggers

docker_develop:
  stage: deploy
  trigger:
    project: sickrage/sickrage-docker
    branch: develop
    strategy: depend
  only:
    - /^[0-9.]+dev[0-9]+$/@SiCKRAGE/sickrage
  except:
    - branches
    - triggers

synology_master_dsm6:
  stage: deploy
  trigger:
    project: sickrage/sickrage-synology
    branch: master-dsm6
    strategy: depend
  only:
    - /^[0-9.]+$/@SiCKRAGE/sickrage
  except:
    - branches
    - triggers

synology_master_dsm7:
  stage: deploy
  trigger:
    project: sickrage/sickrage-synology
    branch: master-dsm7
    strategy: depend
  only:
    - /^[0-9.]+$/@SiCKRAGE/sickrage
  except:
    - branches
    - triggers

synology_develop_dsm6:
  stage: deploy
  trigger:
    project: sickrage/sickrage-synology
    branch: develop-dsm6
    strategy: depend
  only:
    - /^[0-9.]+dev[0-9]+$/@SiCKRAGE/sickrage
  except:
    - branches
    - triggers

readynas_master:
  stage: deploy
  variables:
    UPSTREAM_COMMIT_TAG: $CI_COMMIT_TAG
    UPSTREAM_PROJECT_NAME: $CI_PROJECT_NAME
    UPSTREAM_COMMIT_TAG_MESSAGE: $CI_COMMIT_TAG_MESSAGE
    UPSTREAM_PROJECT_ID: $CI_PROJECT_ID
  trigger:
    project: sickrage/sickrage-readynas
    branch: master
    strategy: depend
  only:
    - /^[0-9.]+$/@SiCKRAGE/sickrage
  except:
    - branches
    - triggers

qnap_master:
  stage: deploy
  variables:
    UPSTREAM_COMMIT_TAG: $CI_COMMIT_TAG
    UPSTREAM_PROJECT_NAME: $CI_PROJECT_NAME
    UPSTREAM_COMMIT_TAG_MESSAGE: $CI_COMMIT_TAG_MESSAGE
    UPSTREAM_PROJECT_ID: $CI_PROJECT_ID
  trigger:
    project: sickrage/sickrage-qnap
    branch: master
    strategy: depend
  only:
    - /^[0-9.]+$/@SiCKRAGE/sickrage
  except:
    - branches
    - triggers

stages:
#  - review_webpack
#  - review_docker
#  - review_deploy
  - release_build
#  - release_sentry
#  - release_deploy

#review:webpack:
#  stage: review_webpack
#  image:
#    name: nikolaik/python-nodejs:python3.7-nodejs10-alpine
#  variables:
#    NODE_ENV: "development"
#  script:
#    - apk add --no-cache git gcc libffi-dev python3-dev musl-dev openssl-dev
#    - yarn install --pure-lockfile --cache-folder .yarn-cache
#    - yarn run build
#  only:
#    - merge_requests@SiCKRAGE/sickrage
#  cache:
#    key: ${CI_COMMIT_REF_SLUG}
#    paths:
#      - sickrage/core/webserver/static/
#
#review:docker:
#  stage: review_docker
#  dependencies:
#    - review:webpack
#  image:
#    name: docker:latest
#    entrypoint: ["/bin/sh", "-c"]
#  variables:
#    DOCKER_DRIVER: overlay2
#    DOCKER_HOST: tcp://localhost:2375
#    DOCKER_TLS_CERTDIR: ""
#  services:
#    - docker:dind
#  script:
#    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_JOB_TOKEN}" "${CI_REGISTRY}"
#    - docker build --network host -t "${CI_REGISTRY_IMAGE}:latest" .
#    - docker tag "${CI_REGISTRY_IMAGE}:latest" "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}"
#    - test ! -z "${CI_COMMIT_TAG}" && docker push "${CI_REGISTRY_IMAGE}:latest"
#    - docker push "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}"
#  only:
#    - merge_requests@SiCKRAGE/sickrage
#  cache:
#    key: ${CI_COMMIT_REF_SLUG}
#
#review:deploy:
#  stage: review_deploy
#  dependencies:
#    - review:docker
#  image:
#    name: lachlanevenson/k8s-kubectl:latest
#    entrypoint: ["/bin/sh", "-c"]
#  script:
#    - kubectl create secret docker-registry gitlab-registry --namespace ${KUBE_NAMESPACE} --docker-server=${CI_REGISTRY} --docker-username=${CI_REGISTRY_USER} --docker-password=${CI_JOB_TOKEN} --docker-email=$GITLAB_USER_EMAIL --dry-run -o json | kubectl apply --namespace ${KUBE_NAMESPACE} -f -
#    - sed -i "s~__CI_REGISTRY_IMAGE__~${CI_REGISTRY_IMAGE}~" manifests/deployment.yaml
#    - sed -i "s/__VERSION__/${CI_COMMIT_REF_NAME}/" manifests/deployment.yaml manifests/ingress.yaml manifests/service.yaml
#    - sed -i "s/__CI_COMMIT_REF_SLUG__/${CI_COMMIT_REF_SLUG}/" manifests/deployment.yaml manifests/ingress.yaml manifests/service.yaml
#    - sed -i "s/__CI_ENVIRONMENT_SLUG__/${CI_ENVIRONMENT_SLUG}/" manifests/deployment.yaml manifests/ingress.yaml manifests/service.yaml
#    - sed -i "s/__KUBE_NAMESPACE__/${KUBE_NAMESPACE}/" manifests/deployment.yaml manifests/ingress.yaml manifests/service.yaml
#    - |
#      if kubectl apply -f manifests/deployment.yaml | grep -q unchanged; then
#          echo "=> Patching deployment to force image update."
#          kubectl patch -f manifests/deployment.yaml -p "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"ci-last-updated\":\"$(date +'%s')\"}}}}}"
#      else
#          echo "=> Deployment apply has changed the object, no need to force image update."
#      fi
#    - kubectl apply -f manifests/service.yaml || true
#    - kubectl apply -f manifests/ingress.yaml
#    - kubectl rollout status -f manifests/deployment.yaml
#  environment:
#    name: review/$CI_COMMIT_REF_NAME
#    url: https://review.sickrage.ca/$CI_COMMIT_REF_SLUG
#    on_stop: review:stop
#  only:
#    - merge_requests@SiCKRAGE/sickrage
#
#review:stop:
#  stage: review_deploy
#  image:
#    name: lachlanevenson/k8s-kubectl:latest
#    entrypoint: ["/bin/sh", "-c"]
#  script:
##    - wget -O /usr/bin/reg https://github.com/genuinetools/reg/releases/download/v0.13.0/reg-linux-amd64
##    - chmod +x /usr/bin/reg
##    - reg -r ${CI_REGISTRY} -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} rm ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}
#    - kubectl delete ing -l ref=${CI_ENVIRONMENT_SLUG}
#    - kubectl delete all -l ref=${CI_ENVIRONMENT_SLUG}
#  variables:
#    GIT_STRATEGY: none
#  when: manual
#  environment:
#    name: review/$CI_COMMIT_REF_NAME
#    action: stop
#  only:
#    - merge_requests@SiCKRAGE/sickrage

release_build_master:
  stage: release_build
  retry: 2
  image:
    name: nikolaik/python-nodejs:python3.8-nodejs10-alpine
  variables:
    NODE_ENV: "development"
  script:
    - apk add --no-cache git gcc libffi-dev python3-dev musl-dev openssl-dev
    - git config --global user.email $(git --no-pager show -s --format='%ae' HEAD)
    - git config --global user.name $(git --no-pager show -s --format='%an' HEAD)
    - yarn install --pure-lockfile --cache-folder .yarn-cache
    - pip install bumpversion
    - pip install -r requirements-dev.txt
    - bumpversion --allow-dirty release package.json sickrage/version.txt
    - git checkout -b release-$(cat sickrage/version.txt)
    - npx auto-changelog -v $(cat sickrage/version.txt) --hide-credit --package --commit-limit false --ignore-commit-pattern \[TASK\].*
    - yarn run build
    - python checksum-generator.py
    - git add --all
    - git commit -m "[TASK] Releasing v$(cat sickrage/version.txt)"
    - git fetch . release-$(cat sickrage/version.txt):master
    - git fetch . release-$(cat sickrage/version.txt):develop
    - git tag -a $(cat sickrage/version.txt) -m "Release v$(cat sickrage/version.txt) master"
    - git push https://$GIT_ACCESS_USER:$GIT_ACCESS_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git HEAD:master --follow-tags
    - git checkout develop
    - bumpversion --allow-dirty patch package.json sickrage/version.txt
    - python checksum-generator.py
    - git add --all
    - git commit -m "[TASK] Bump develop branch to v$(cat sickrage/version.txt)"
    - git push https://$GIT_ACCESS_USER:$GIT_ACCESS_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git HEAD:develop --follow-tags
  when: manual
  only:
    - /^[0-9.]+dev[0-9]+$/@echel0n/sickrage
  except:
    refs:
      - branches
      - triggers
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[TASK\] Releasing/

release_build_develop:
  stage: release_build
  retry: 2
  image:
    name: nikolaik/python-nodejs:python3.8-nodejs10-alpine
  variables:
    NODE_ENV: "development"
  script:
    - apk add --no-cache git gcc libffi-dev python3-dev musl-dev openssl-dev
    - yarn install --pure-lockfile --cache-folder .yarn-cache
    - pip install bumpversion
    - pip install -r requirements-dev.txt
    - bumpversion --allow-dirty dev package.json sickrage/version.txt
    - npx auto-changelog -v $(cat sickrage/version.txt) --hide-credit --unreleased --package --commit-limit false --ignore-commit-pattern \[TASK\].*
    - yarn run build
    - python checksum-generator.py
    #    - python setup.py extract_messages
    #    - crowdin-cli-py upload sources
    #    - crowdin-cli-py download
    #    - python setup.py compile_catalog
    - git config --global user.email $(git --no-pager show -s --format='%ae' HEAD)
    - git config --global user.name $(git --no-pager show -s --format='%an' HEAD)
    - git add --all
    - git commit -m "[TASK] Pre-Releasing v$(cat sickrage/version.txt)"
    - git tag -a $(cat sickrage/version.txt) -m "Pre-release v$(cat sickrage/version.txt)"
    - git push https://$GIT_ACCESS_USER:$GIT_ACCESS_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git HEAD:$CI_COMMIT_REF_NAME --follow-tags
  only:
    - develop@echel0n/sickrage
  except:
    refs:
      - tags
      - triggers
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[TASK\] Pre-Releasing/
      - $CI_COMMIT_MESSAGE =~ /\[TASK\] Bump/

release_sentry_master:
  stage: release_sentry
  retry: 2
  image:
    name: getsentry/sentry-cli
    entrypoint: [""]
  script:
    - export SENTRY_URL=$SENTRY_URL
    - export SENTRY_AUTH_TOKEN=$SENTRY_AUTH_TOKEN
    - export SENTRY_ORG=$SENTRY_ORG
    - export SENTRY_PROJECT=$SENTRY_PROJECT
    - sentry-cli releases new --project $SENTRY_PROJECT $(cat sickrage/version.txt)
    - sentry-cli releases set-commits --auto $(cat sickrage/version.txt)
    - sentry-cli releases finalize $(cat sickrage/version.txt)
    - sentry-cli releases deploys $(cat sickrage/version.txt) new -e master
  only:
    - /^[0-9.]+$/@SiCKRAGE/sickrage
  except:
    - branches
    - triggers

release_sentry_develop:
  stage: release_sentry
  retry: 2
  image:
    name: getsentry/sentry-cli
    entrypoint: [""]
  script:
    - export SENTRY_URL=$SENTRY_URL
    - export SENTRY_AUTH_TOKEN=$SENTRY_AUTH_TOKEN
    - export SENTRY_ORG=$SENTRY_ORG
    - export SENTRY_PROJECT=$SENTRY_PROJECT
    - sentry-cli releases new --project $SENTRY_PROJECT $(cat sickrage/version.txt)
    - sentry-cli releases set-commits --auto $(cat sickrage/version.txt)
    - sentry-cli releases finalize $(cat sickrage/version.txt)
    - sentry-cli releases deploys $(cat sickrage/version.txt) new -e develop
  only:
    - /^[0-9.]+dev[0-9]+$/@SiCKRAGE/sickrage
  except:
    - branches
    - triggers

deploy_pypi:
  stage: release_deploy
  retry: 2
  image: python:3.8-alpine3.12
  script:
    - apk add --no-cache py-pip gcc libffi-dev python3-dev musl-dev openssl-dev
    - pip install -U twine
    - python setup.py sdist bdist_wheel
    - twine upload dist/*
  only:
    - /^[0-9.]+$/@SiCKRAGE/sickrage
    - /^[0-9.]+dev[0-9]+$/@SiCKRAGE/sickrage
  except:
    - branches
    - triggers

deploy_docker_master:
  stage: release_deploy
  trigger:
    project: sickrage/sickrage-docker
    branch: master
  only:
    - /^[0-9.]+$/@SiCKRAGE/sickrage
  except:
    - branches
    - triggers

deploy_docker_develop:
  stage: release_deploy
  trigger:
    project: sickrage/sickrage-docker
    branch: develop
  only:
    - /^[0-9.]+dev[0-9]+$/@SiCKRAGE/sickrage
  except:
    - branches
    - triggers

deploy_synology_master:
  stage: release_deploy
  trigger:
    project: sickrage/sickrage-synology
    branch: master
  only:
    - /^[0-9.]+$/@SiCKRAGE/sickrage
  except:
    - branches
    - triggers

deploy_synology_develop:
  stage: release_deploy
  trigger:
    project: sickrage/sickrage-synology
    branch: develop
  only:
    - /^[0-9.]+dev[0-9]+$/@SiCKRAGE/sickrage
  except:
    - branches
    - triggers

deploy_readynas_master:
  stage: release_deploy
  variables:
    UPSTREAM_COMMIT_TAG: $CI_COMMIT_TAG
    UPSTREAM_PROJECT_NAME: $CI_PROJECT_NAME
    UPSTREAM_COMMIT_TAG_MESSAGE: $CI_COMMIT_TAG_MESSAGE
    UPSTREAM_PROJECT_ID: $CI_PROJECT_ID
  trigger:
    project: sickrage/sickrage-readynas
    branch: master
  only:
    - /^[0-9.]+$/@SiCKRAGE/sickrage
  except:
    - branches
    - triggers

deploy_qnap_master:
  stage: release_deploy
  variables:
    UPSTREAM_COMMIT_TAG: $CI_COMMIT_TAG
    UPSTREAM_PROJECT_NAME: $CI_PROJECT_NAME
    UPSTREAM_COMMIT_TAG_MESSAGE: $CI_COMMIT_TAG_MESSAGE
    UPSTREAM_PROJECT_ID: $CI_PROJECT_ID
  trigger:
    project: sickrage/sickrage-qnap
    branch: master
  only:
    - /^[0-9.]+$/@SiCKRAGE/sickrage
  except:
    - branches
    - triggers
